variables:
  NAMESPACE: "telco-jira"
  IMAGE: "portal-to-jira-sync"
  TAG: "latest" #$CI_PIPELINE_IID

stages:
  - build
  - sync
  - deploy

build_push_sync_container:
  stage: build
  variables:
    NAMESPACE: "telco-jira"
  before_script:
  - echo "Please make sure that Podman and Kubectl are installed" 
  script:
  - oc login -u $OCP_USER -p $OCP_PASS --server=$SERVER --insecure-skip-tls-verify 
  - podman build -t $REGISTRY/$NAMESPACE/$IMAGE:$TAG .
  - podman login -u $(oc whoami) -p $(oc whoami -t) --tls-verify=false $REGISTRY
  - podman push --tls-verify=false $REGISTRY/$NAMESPACE/$IMAGE:$TAG
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'

build_push_dashboard_container:
  stage: build
  before_script:
  - echo "Please make sure that Podman and Kubectl are installed" 
  script:
  - oc login -u $OCP_USER -p $OCP_PASS --server=$SERVER --insecure-skip-tls-verify 
  - cd dashboard/build
  - ./t5gweb.sh latest true
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'

github_sync:
  stage: sync
  script:
    - git config --global user.email "${GL_USER_EMAIL}"
    - git config --global user.name "${GL_USER}"
    - git clone https://$GL_USER:$GL_PASS@$CI_SERVER_HOST/$CI_PROJECT_PATH.git 
    - cd t5g-field-support-team-utils
    - git remote add upstream https://$GH_USER:$GH_PASS@github.com/RHsyseng/t5g-field-support-team-utils.git 
    - git fetch upstream
    - git checkout master
    - git merge upstream/main --allow-unrelated-histories
    - git push origin master
    - echo "Sync has completed"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

k8s_deploy:
  stage: deploy
  before_script:
  #Shift_Telco
  - sed -i 's/Jira_User/'"$Jira_User"'/g' k8s/yaml/config-map.yml
  - sed -i 's/Jira_Pass/'"$Jira_Pass"'/g' k8s/yaml/config-map.yml
  - echo k8s/yaml/config-map.yml | awk -i inplace -v srch="Offline_token" -v repl="$Offline_token" '{ sub(srch,repl,$0); print $0 }' k8s/yaml/config-map.yml
  - echo k8s/yaml/config-map.yml | awk -i inplace -v srch="Slack_token" -v repl="$Slack_token" '{ sub(srch,repl,$0); print $0 }' k8s/yaml/config-map.yml
  - echo k8s/yaml/config-map.yml | awk -i inplace -v srch="Slack_channel" -v repl="$Slack_channel" '{ sub(srch,repl,$0); print $0 }' k8s/yaml/config-map.yml
  - echo k8s/yaml/config-map.yml | awk -i inplace -v srch="Team" -v repl="$Team" '{ sub(srch,repl,$0); print $0 }' k8s/yaml/config-map.yml
  #CNV
  - sed -i 's/Jira_User/'"$Jira_User"'/g' k8s/yaml/config-map-cnv.yml
  - sed -i 's/Jira_Pass/'"$Jira_Pass"'/g' k8s/yaml/config-map-cnv.yml
  - echo k8s/yaml/config-map-cnv.yml | awk -i inplace -v srch="Offline_token" -v repl="$Offline_token" '{ sub(srch,repl,$0); print $0 }' k8s/yaml/config-map-cnv.yml
  #Dashboard
  - sed -i 's/Jira_User/'"$Jira_User"'/g' dashboard/yaml/04_t5gweb-app-deployment.yml
  - sed -i 's/Jira_Pass/'"$Jira_Pass"'/g' dashboard/yaml/04_t5gweb-app-deployment.yml
  - echo dashboard/yaml/04_t5gweb-app-deployment.yml | awk -i inplace -v srch="Offline_token" -v repl="$Offline_token" '{ sub(srch,repl,$0); print $0 }' dashboard/yaml/04_t5gweb-app-deployment.yml
  - echo dashboard/yaml/04_t5gweb-app-deployment.yml | awk -i inplace -v srch="Accounts" -v repl="$Accounts" '{ sub(srch,repl,$0); print $0 }' dashboard/yaml/04_t5gweb-app-deployment.yml
  - echo dashboard/yaml/06_t5gweb-route.yml | awk -i inplace -v srch="URL" -v repl="$URL" '{ sub(srch,repl,$0); print $0 }' dashboard/yaml/06_t5gweb-route.yml
  script:
  - kubectl apply -f k8s/yaml/ -n $NAMESPACE 
  - sed -i '/portal-to-jira-sync:/! s/portal-to-jira-sync/portal-to-jira-sync-cnv/g' k8s/yaml/cronjob.yml
  - kubectl apply -f k8s/yaml/ -n $NAMESPACE 
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'
  - if: '$CI_PIPELINE_SOURCE == "schedule"'
